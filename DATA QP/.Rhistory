mod_bi_only_inanDP <- lmer(response ~ do +
(1 | participant) +
(1 + do | item),
data = df_ajt_sp_ungram_bi_inanDP,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(mod_bi_only_inanDP)
mod_bi_only_inanDP <- lmer(response ~ do +
(1 | participant) +
(1 + do | item),
data = df_ajt_sp_ungram_bi_inanDP,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
mod_bi_only_inanDP <- lmer(response ~ do +
(1 | participant) +
(1 + do | item),
data = df_ajt_sp_ungram_bi_inanDP))
mod_bi_only_inanPron <- lmer(response ~ do +
(1 | participant) +
(1 + do | item),
data = df_ajt_sp_ungram_bi_inanPron,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
df_ajt_sp_ungram_bi_inanDP <- filter(df_ajt_sp_ungram_bi, do == "Pron")
mod_bi_only_inanPron <- lmer(response ~ do +
(1 | participant) +
(1 + do | item),
data = df_ajt_sp_ungram_bi_inanPron,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
df_ajt_sp_ungram_bi_inanPron <- filter(df_ajt_sp_ungram_bi, do == "Pron")
mod_bi_only_inanPron <- lmer(response ~ do +
(1 | participant) +
(1 + do | item),
data = df_ajt_sp_ungram_bi_inanPron,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
mod_bi_only_inanPron <- lmer(response ~ group +
(1 | participant) +
(1 + do | item),
data = df_ajt_sp_ungram_bi_inanPron,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
df_ajt_sp_ungram_bi_inanPron <- filter(df_ajt_sp_ungram_bi, do == "Pron")
mod_bi_only_inanPron <- lmer(response ~ group +
(1 | participant) +
(1 + do | item),
data = df_ajt_sp_ungram_bi_inanPron,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
mod_bi_only_inanPron <- lmer(response ~ group +
(1 | participant) +
(1 | item),
data = df_ajt_sp_ungram_bi_inanPron,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
mod_bi_only_inanPron <- lmer(response ~ group,
data = df_ajt_sp_ungram_bi_inanPron,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
animacyDP_mod <- glmer(response ~ groupRC + (1 | participant) + (1 | item),
data = df_dp_animateDP, family = "binomial",
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
rm(list = ls(all = TRUE))
setwd("~/Desktop/DATA QP")
library(tidyverse)
library(readxl)
library(lme4)
library(lmerTest)
library(broom)
df_p_sp <- read_excel("./P_SP.xlsx")
glimpse(df_p_sp)
# Overal averages
df_p_sp %>%
filter(., do != 'AGC') %>%
group_by(., group, do, animacy) %>%
summarize(., accuracy = mean(response), sd = sd(response))
unique(df_p_sp$response)
# group    do animacy   accuracy        sd
#    b    DP      An 0.83333333 0.3747658
#    b    DP    Inan 0.02222222 0.1482314
#    b  Pron      An 0.83333333 0.3747658
#    b  Pron    Inan 0.23333333 0.4253221
#    m    DP      An 1.00000000 0.0000000
#    m    DP    Inan 0.00000000 0.0000000
#    m  Pron      An 0.98823529 0.1084652
#    m  Pron    Inan 0.00000000 0.0000000
prod_p1 <- df_p_sp %>%
filter(., do != 'AGC') %>%
mutate(., group = recode(group, `b` = "Bilinguals", `m` = "Monolinguals")) %>%
ggplot(., aes(x = animacy, y = response, shape = do, dodge = do)) +
facet_grid(. ~ group) +
geom_hline(yintercept = 0.5, color = 'white', size = 2) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange', size = 1,
position = position_dodge(width = 0.5)) +
stat_summary(fun.y = mean, geom = 'point', color = 'white', size = 3,
position = position_dodge(width = 0.5)) +
scale_shape(name = "") +
labs(x = 'Group', y = '% DOM', caption = 'Mean +/- 95% CI',
title = 'Proportion of DOM as a function of group, do, and animacy.') +
theme_grey(base_size = 14, base_family = 'Times')
ggsave("prod_p1.png", plot = prod_p1, dpi = 600,
device = "png", path = "./figs",
height = 6, width = 9, units = "in")
df_dp_b_only <- df_p_sp %>%
filter(., do != "AGC", group == "b") %>%
mutate(., groupRC = recode(group, `m` = -0.5, `b` = 0.5),
doRC    = recode(do, `DP` = -0.5, `Pron` = 0.5),
animacyRC = recode(animacy, `An` = -0.5, `Inan` = 0.5),
mintSc = (mintsp - mean(mintsp)) / 2 * sd(mintsp))
mod_p_sp_mint <- readRDS("./final_mod.rds")
# Fit null, group and full models
mod_p_sp_full <- glmer(response ~ doRC + animacyRC +
(1 + doRC + animacyRC | participant) +
(1 + doRC + animacyRC | item),
data = df_dp_b_only, family = 'binomial',
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
mod_p_sp_mint <- glmer(response ~ doRC + animacyRC + mintSc +
(1 + doRC + animacyRC | participant) +
(1 + doRC + animacyRC | item),
data = df_dp_b_only, family = 'binomial',
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
if(F){
mod_p_sp_int <- glmer(response ~ doRC + animacyRC + mintSc + doRC:animacyRC +
(1 | participant) +
(1 | item),
data = df_dp_b_only, family = 'binomial',
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
saveRDS(mod_p_sp_mint, file = "./final_mod.rds", compress = "xz")
}
anova(mod_p_sp_full, mod_p_sp_mint, mod_p_sp_int)
summary(mod_p_sp_full)
summary(mod_p_sp_mint)
summary(mod_p_sp_int)
# Do bilinguals differ from monolinguals in their
# responses for animate objects
# - we know there is no difference in DO so we collapse
#   over this factor
df_dp_animate <- df_p_sp %>%
filter(., do != "AGC", animacy == "An") %>%
mutate(., groupRC = recode(group, `m` = -0.5, `b` = 0.5),
doRC    = recode(do, `DP` = -0.5, `Pron` = 0.5),
animacyRC = recode(animacy, `An` = -0.5, `Inan` = 0.5),
mintSc = (mintsp - mean(mintsp)) / 2 * sd(mintsp))
animacy_mod <- glmer(response ~ groupRC + (1 | participant) + (1 | item),
data = df_dp_animate, family = "binomial",
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(animacy_mod)
# YES
# Do bilinguals differ from monolinguals in their
# responses for inanimate pronoun objects
df_dp_inanimate_pro <- df_p_sp %>%
filter(., do == "Pron", animacy == "Inan") %>%
mutate(., groupRC = recode(group, `m` = -0.5, `b` = 0.5),
mintSc = (mintsp - mean(mintsp)) / 2 * sd(mintsp)) %>% as.data.frame
inanimacy_mod <- glmer(response ~ groupRC + (1 | participant) + (1 | item),
data = df_dp_inanimate_pro, family = "binomial",
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(inanimacy_mod)
# Model cannot run because "group" is perfectly correlated with response (all monos avoid use of DOM)
# Options
#  1. ttest agaist 0 (do bi use DOM significanly above 0)
#  2. add some 1Â´s for mono group to make model run
# How to decide? Talk to liliana about what questions are most important to answer
df_p_sp %>%
filter(., animacy == "Inan", group == "b", do != "AGC") %>%
group_by(., group, do, participant) %>%
summarize(., resp = mean(response)) %>%
do(tidy(t.test(.$resp, alternative = "greater", mu = 0.0, conf.level = 0.95)))
# Yes, the bilinguals use "a" significantly greater than
# 0 for inanimate objects pronouns
# group    do   estimate statistic     p.value parameter    conf.low
#     b    DP 0.02222222  1.000000 0.165666381        17 -0.01643571
#     b  Pron 0.23333333  3.378011 0.001786916        17  0.11317143
# Do bilinguals differ from monolinguals in their
# responses for animate DPs
# - we know there is no difference in DO so we collapse
#   over this factor
df_p_sp %>%
filter(., animacy == "An", group == "b", do != "DP") %>%
group_by(., group, participant) %>%
summarize(., resp = mean(response)) %>%
do(tidy(t.test(.$resp, alternative = "greater", mu = 0.0, conf.level = 0.95)))
rm(list = ls(all = TRUE))
setwd("~/Desktop/DATA QP")
library(tidyverse)
library(readxl)
library(lme4)
library(lmtest)
df_p_ro <- read_excel("./P_RO.xlsx")
glimpse(df_p_ro)
df_p_ro %>%
filter(., do != 'AGC') %>%
group_by(., group, do, animacy) %>%
summarize(., accuracy = mean(response), sd = sd(response))
df_p_ro %>%
filter(., do != 'AGC') %>%
mutate(., group = recode(group, `b` = "Bilinguals", `m` = "Monolinguals")) %>%
ggplot(., aes(x = animacy, y = response, shape = do, dodge = do)) +
facet_grid(. ~ group) +
geom_hline(yintercept = 0.5, color = 'white', size = 2) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange', size = 1,
position = position_dodge(width = 0.5)) +
stat_summary(fun.y = mean, geom = 'point', color = 'white', size = 3,
position = position_dodge(width = 0.5)) +
scale_shape(name = "") +
labs(x = 'Group', y = 'Response accuracy', caption = 'Mean +/- 95% CI',
title = 'Response accuracy as a function of group, do, and animacy.') +
theme_grey(base_size = 16, base_family = 'Times')
mod_p_ro_full <- glmer(response ~ groupRC + doRC + animacyRC +
(1 + doRC | participant) +
(1 + doRC | item),
data = df_dp_only, family = 'binomial',
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
df_dp_only <- df_p_ro %>%
filter(., do != "AGC") %>%
mutate(., groupRC = recode(group, `m` = -0.5, `b` = 0.5),
doRC    = recode(do, `DP` = -0.5, `Pron` = 0.5),
animacyRC = recode(animacy, `An` = -0.5, `Inan` = 0.5),
mintSc = (mintro - mean(mintro)) / 2 * sd(mintro))
mod_p_ro_full <- glmer(response ~ groupRC + doRC + animacyRC +
(1 + doRC | participant) +
(1 + doRC | item),
data = df_dp_only, family = 'binomial',
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
Yes
df_p_ro %>%
filter(., animacy == "In", group == "b", do == "Pron") %>%
group_by(., group, participant) %>%
summarize(., resp = mean(response)) %>%
do(tidy(t.test(.$resp, alternative = "greater", mu = 0.0, conf.level = 0.95)))
df_p_sp %>%
filter(., animacy == "An", group == "b", do == "DP") %>%
group_by(., group, participant) %>%
summarize(., resp = mean(response)) %>%
do(tidy(t.test(.$resp, alternative = "greater", mu = 0.0, conf.level = 0.95)))
df_p_sp %>%
filter(., animacy == "Inan", group == "b", do != "AGC") %>%
group_by(., group, do, participant) %>%
summarize(., resp = mean(response)) %>%
do(tidy(t.test(.$resp, alternative = "greater", mu = 0.0, conf.level = 0.95)))
rm(list = ls(all = TRUE))
setwd("~/Desktop/DATA QP")
library(tidyverse)
library(readxl)
library(lme4)
library(lmerTest)
library(broom)
df_p_sp <- read_excel("./P_SP.xlsx")
glimpse(df_p_sp)
df_p_sp %>%
filter(., animacy == "An", group == "b", do == "DP") %>%
group_by(., group, participant) %>%
summarize(., resp = mean(response)) %>%
do(tidy(t.test(.$resp, alternative = "greater", mu = 0.0, conf.level = 0.95)))
df_p_ro %>%
filter(., animacy == "In", group == "b", do == "Pron") %>%
group_by(., group, participant) %>%
summarize(., resp = mean(response)) %>%
do(tidy(t.test(.$resp, alternative = "greater", mu = 0.0, conf.level = 0.95)))
rm(list = ls(all = TRUE))
setwd("~/Desktop/DATA QP")
library(tidyverse)
library(readxl)
library(lme4)
library(lmtest)
df_p_ro <- read_excel("./P_RO.xlsx")
glimpse(df_p_ro)
df_p_ro %>%
filter(., animacy == "In", group == "b", do == "Pron") %>%
group_by(., group, participant) %>%
summarize(., resp = mean(response)) %>%
do(tidy(t.test(.$resp, alternative = "greater", mu = 0.0, conf.level = 0.95)))
df_p_ro %>%
filter(., animacy == "In", group == "b", do == "Pron") %>%
group_by(., participant) %>%
summarize(., resp = mean(response)) %>%
do(tidy(t.test(.$resp, alternative = "greater", mu = 0.0, conf.level = 0.95)))
df_p_ro %>%
filter(., animacy == "Inan", group == "b", do == "Pron") %>%
group_by(., group, participant) %>%
summarize(., resp = mean(response)) %>%
do(tidy(t.test(.$resp, alternative = "greater", mu = 0.0, conf.level = 0.95)))
rm(list = ls(all = TRUE))
setwd("~/Desktop/DATA QP")
library(tidyverse)
library(readxl)
library(lme4)
library(lmtest)
df_p_ro <- read_excel("./P_RO.xlsx")
glimpse(df_p_ro)
# Overal averages
df_p_ro %>%
filter(., do != 'AGC') %>%
group_by(., group, do, animacy) %>%
summarize(., accuracy = mean(response), sd = sd(response))
# # Groups:   group, do [?]
# group    do animacy  accuracy        sd
# <chr> <chr>   <chr>     <dbl>     <dbl>
#   1     b    DP      An 0.7555556 0.4321649
#   2     b    DP    Inan 1.0000000 0.0000000
#   3     b  Pron      An 0.8777778 0.3293773
#   4     b  Pron    Inan 0.7888889 0.4103833
df_p_ro %>%
filter(., do != 'AGC') %>%
mutate(., group = recode(group, `b` = "Bilinguals", `m` = "Monolinguals")) %>%
ggplot(., aes(x = animacy, y = response, shape = do, dodge = do)) +
facet_grid(. ~ group) +
geom_hline(yintercept = 0.5, color = 'white', size = 2) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange', size = 1,
position = position_dodge(width = 0.5)) +
stat_summary(fun.y = mean, geom = 'point', color = 'white', size = 3,
position = position_dodge(width = 0.5)) +
scale_shape(name = "") +
labs(x = 'Group', y = 'Response accuracy', caption = 'Mean +/- 95% CI',
title = 'Response accuracy as a function of group, do, and animacy.') +
theme_grey(base_size = 16, base_family = 'Times')
df_dp_only <- df_p_ro %>%
filter(., do != "AGC") %>%
mutate(., groupRC = recode(group, `m` = -0.5, `b` = 0.5),
doRC    = recode(do, `DP` = -0.5, `Pron` = 0.5),
animacyRC = recode(animacy, `An` = -0.5, `Inan` = 0.5),
mintSc = (mintro - mean(mintro)) / 2 * sd(mintro))
# same t.test as used in the Spanish production
df_p_ro %>%
filter(., animacy == "Inan", group == "b", do == "Pron") %>%
group_by(., group, participant) %>%
summarize(., resp = mean(response)) %>%
do(tidy(t.test(.$resp, alternative = "greater", mu = 0.0, conf.level = 0.95)))
df_ajt_sp_ungram_bi_inanPron <- filter(df_ajt_sp_ungram_bi, do == "Pron")
rm(list = ls(all = TRUE))
setwd("~/Desktop/DATA QP")
library(tidyverse)
library(readxl)
library(lme4)
library(lmerTest)
df_ajt_sp <- read_excel("./AJT_SP.xlsx")
glimpse(df_ajt_sp)
# Overal averages
df_ajt_sp %>%
filter(., do != 'AGC') %>%
group_by(., group, do, animacy, gram) %>%
summarize(., accuracy = mean(response), sd = sd(response))
df_ajt_sp <- df_ajt_sp %>%
filter(., do != "AGC") %>%
mutate(., groupRC = recode(group, `m` = -0.5, `b` = 0.5),
doRC    = recode(do, `DP` = -0.5, `Pron` = 0.5),
animacyRC = recode(animacy, `An` = -0.5, `Inan` = 0.5),
gramRC = recode(gram, `g` = -0.5, `u` = 0.5),
mintSc = (mintsp - mean(mintsp)) / 2 * sd(mintsp))
mod_full <- lmer(response ~ groupRC + doRC + animacyRC + gramRC + mintSc +
(1 + doRC + animacyRC + gramRC | participant) +
(1 + doRC + animacyRC + gramRC | item),
data = df_ajt_sp,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(mod_full)
df_ajt_sp_ungram <- filter(df_ajt_sp, gram == "u")
df_ajt_sp_ungram_DP <- filter(df_ajt_sp_ungram_DP, do == DP)
df_ajt_sp_ungram_DP <- filter(df_ajt_sp_ungram, do == DP)
df_ajt_sp_ungram_DP <- filter(df_ajt_sp_ungram, do == "DP")
df_ajt_sp_ungram_DP_An <- filter(df_ajt_sp_ungram_DP, animacy == "An")
mod_full_ungram_DP_An <- lmer(response ~ groupRC + doRC + animacyRC + mintSc +
(1 + doRC + animacyRC | participant) +
(1 + doRC + animacyRC | item),
data = df_ajt_sp_ungram_DP_An,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
mod_full_ungram_DP_An <- lmer(response ~ groupRC + mintSc +
(1 | participant) +
(1 | item),
data = df_ajt_sp_ungram_DP_An,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
df_ajt_sp_ungram <- filter(df_ajt_sp, gram == "u")
df_ajt_sp_ungram_DP <- filter(df_ajt_sp_ungram, do == "DP")
df_ajt_sp_ungram_DP_An <- filter(df_ajt_sp_ungram_DP, animacy == "An")
mod_full_ungram_DP_An <- lmer(response ~ groupRC + mintSc +
(1 | participant) +
(1 | item),
data = df_ajt_sp_ungram_DP_An,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
df_ajt_sp_ungram <- filter(df_ajt_sp, gram == "u")
df_ajt_sp_ungram_Pron <- filter(df_ajt_sp_ungram, do == "Pron")
df_ajt_sp_ungram_Pron_Inan <- filter(df_ajt_sp_ungram_Pron, animacy == "Inan")
df_ajt_sp_ungram <- filter(df_ajt_sp, gram == "u")
df_ajt_sp_ungram_Pron <- filter(df_ajt_sp_ungram, do == "Pron")
df_ajt_sp_ungram_Pron_Inan <- filter(df_ajt_sp_ungram_Pron, animacy == "Inan")
mod_full_ungram_Pron_Inan <- lmer(response ~ groupRC + mintSc +
(1 | participant) +
(1 | item),
data = df_ajt_sp_ungram_DP_An,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(mod_full_ungram_DP_An)
## Probando
df_ajt_sp_ungram <- filter(df_ajt_sp, gram == "u")
df_ajt_sp_ungram_DP <- filter(df_ajt_sp_ungram, do == "DP")
df_ajt_sp_ungram_DP_An <- filter(df_ajt_sp_ungram_DP, animacy == "An")
mod_full_ungram_DP_An <- lmer(response ~ groupRC + mintSc +
(1 | participant) +
(1 | item),
data = df_ajt_sp_ungram_DP_An,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(mod_full_ungram_DP_An)
df_ajt_sp_ungram <- filter(df_ajt_sp, gram == "u")
df_ajt_sp_ungram_Pron <- filter(df_ajt_sp_ungram, do == "Pron")
df_ajt_sp_ungram_Pron_Inan <- filter(df_ajt_sp_ungram_Pron, animacy == "Inan")
mod_full_ungram_Pron_Inan <- lmer(response ~ groupRC + mintSc +
(1 | participant) +
(1 | item),
data = df_ajt_sp_ungram_DP_An,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(mod_full_ungram_Pron_Inan)
rm(list = ls(all = TRUE))
setwd("~/Desktop/DATA QP")
library(tidyverse)
library(readxl)
library(lme4)
library(lmerTest)
df_ajt_sp <- read_excel("./AJT_SP.xlsx")
glimpse(df_ajt_sp)
# Overal averages
df_ajt_sp %>%
filter(., do != 'AGC') %>%
group_by(., group, do, animacy, gram) %>%
summarize(., accuracy = mean(response), sd = sd(response))
# group    do animacy  gram accuracy        sd
# <chr> <chr>   <chr> <chr>    <dbl>     <dbl>
#  1     b    DP      An     g 4.355556 0.8021436
#  2     b    DP      An     u 3.244444 1.3340907
#  3     b    DP    Inan     g 4.422222 0.7534433
#  4     b    DP    Inan     u 2.444444 1.2532785
#  5     b  Pron      An     g 4.333333 0.7977240
#  6     b  Pron      An     u 2.888889 1.4177803
#  7     b  Pron    Inan     g 4.311111 0.7330578
#  8     b  Pron    Inan     u 3.088889 1.4113537
#  9     m    DP      An     g 4.600000 0.7442084
# 10     m    DP      An     u 1.577778 0.7534433
# 11     m    DP    Inan     g 4.725000 0.5057363
# 12     m    DP    Inan     u 1.311111 0.4681794
# 13     m  Pron      An     g 4.200000 0.8420754
# 14     m  Pron      An     u 2.000000 1.1766968
# 15     m  Pron    Inan     g 4.377778 0.6838690
# 16     m  Pron    Inan     u 1.525000 0.5057363
ajt_p2 <- df_ajt_sp %>%
filter(., do != 'AGC') %>%
mutate(., group = recode(group, `b` = "Bilinguals", `m` = "Monolinguals")) %>%
ggplot(., aes(x = animacy, y = response, shape = do, color = gram, dodge = gram)) +
facet_grid(. ~ group) +
geom_hline(yintercept = 0.5, color = 'white', size = 2) +
stat_summary(fun.data = mean_cl_boot, geom = 'pointrange', size = 1,
position = position_dodge(width = 0.5)) +
stat_summary(fun.y = mean, geom = 'point', color = 'white', size = 3,
position = position_dodge(width = 0.5)) +
scale_shape(name = "") +
scale_color_brewer(palette = "Set1", name = "", labels = c("Gram.", "Ungram.")) +
labs(x = 'Group', y = '% Response', caption = 'Mean +/- 95% CI',
title = 'Acceptability of DOM as a function of group, do, animacy,\nand grammaticality.') +
theme_grey(base_size = 16, base_family = 'Times')
ggsave("ajt_p2.png", plot = ajt_p2, dpi = 600,
device = "png", path = "./figs",
height = 6, width = 9, units = "in")
mintSc <- (mintsp - mean(mintsp) / 2 * sd(mintsp))
df_ajt_sp <- df_ajt_sp %>%
filter(., do != "AGC") %>%
mutate(., groupRC = recode(group, `m` = -0.5, `b` = 0.5),
doRC    = recode(do, `DP` = -0.5, `Pron` = 0.5),
animacyRC = recode(animacy, `An` = -0.5, `Inan` = 0.5),
gramRC = recode(gram, `g` = -0.5, `u` = 0.5),
mintSc = (mintsp - mean(mintsp)) / 2 * sd(mintsp))
mod_full <- lmer(response ~ groupRC + doRC + animacyRC + gramRC + mintSc +
(1 + doRC + animacyRC + gramRC | participant) +
(1 + doRC + animacyRC + gramRC | item),
data = df_ajt_sp,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(mod_full)
# Main effect of group and gram, we will separate gram (we are interested in ungram)
df_ajt_sp_ungram <- filter(df_ajt_sp, gram == "u")
mod_full_ungram <- lmer(response ~ groupRC + doRC + animacyRC + mintSc +
(1 + doRC + animacyRC | participant) +
(1 + doRC + animacyRC | item),
data = df_ajt_sp_ungram,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
mod_full_int <- lmer(response ~ groupRC * doRC * animacyRC + mintSc +
(1 + doRC + animacyRC | participant) +
(1 + doRC + animacyRC | item),
data = df_ajt_sp_ungram,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(mod_full_ungram)
summary(mod_full_int) # 3 way interaction: group by do by animacy
# Separate by groups
df_ajt_sp_ungram_bi <- filter(df_ajt_sp_ungram, group == "b")
mod_bi_full_int <- lmer(response ~ doRC * animacyRC + mintSc +
(1 + doRC + animacyRC | participant) +
(1 + doRC + animacyRC | item),
data = df_ajt_sp_ungram_bi,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(mod_bi_full_int)
df_ajt_sp_ungram_bi_inan <- filter(df_ajt_sp_ungram_bi, animacy == "Inan")
mod_bi_only_inan <- lmer(response ~ do +
(1 | participant) +
(1 + do | item),
data = df_ajt_sp_ungram_bi_inan,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(mod_bi_only_inan)
## Probando
df_ajt_sp_ungram <- filter(df_ajt_sp, gram == "u")
df_ajt_sp_ungram_DP <- filter(df_ajt_sp_ungram, do == "DP")
df_ajt_sp_ungram_DP_An <- filter(df_ajt_sp_ungram_DP, animacy == "An")
mod_full_ungram_DP_An <- lmer(response ~ groupRC + mintSc +
(1 | participant) +
(1 | item),
data = df_ajt_sp_ungram_DP_An,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(mod_full_ungram_DP_An)
df_ajt_sp_ungram <- filter(df_ajt_sp, gram == "u")
df_ajt_sp_ungram_Pron <- filter(df_ajt_sp_ungram, do == "Pron")
df_ajt_sp_ungram_Pron_Inan <- filter(df_ajt_sp_ungram_Pron, animacy == "Inan")
mod_full_ungram_Pron_Inan <- lmer(response ~ groupRC + mintSc +
(1 | participant) +
(1 | item),
data = df_ajt_sp_ungram_DP_An,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=2e5)))
summary(mod_full_ungram_Pron_Inan)
